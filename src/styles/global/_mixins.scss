@mixin tf-media-below($width) {
  @media (max-width: #{tf-map-get($tf-media-breakpoints, $width)}) {
    @content;
  }
}

@mixin tf-media-above($width) {
  @media (min-width: #{tf-map-get($tf-media-breakpoints, $width) + 1px}) {
    @content;
  }
}

@mixin tf-media-range($from, $to) {
  @media (min-width: #{tf-map-get($tf-media-breakpoints, $from) + 1px}) and (max-width: #{tf-map-get($tf-media-breakpoints, $to)}) {
    @content;
  }
}

@mixin tf-minimal-desktop {
  @media (min-width: #{tf-map-get($tf-media-breakpoints, lg) + 1px}) and (max-width: #{tf-map-get($tf-media-breakpoints, xl)}) {
    @content;
  }
}

@mixin tf-minimal-desktop-and-below {
  @media (max-width: #{tf-map-get($tf-media-breakpoints, xl)}) {
    @content;
  }
}

@mixin tf-desktop {
  @media (min-width: #{tf-map-get($tf-media-breakpoints, lg) + 1px}) {
    @content;
  }
}

@mixin tf-desktop-xl {
  @media (min-width: #{tf-map-get($tf-media-breakpoints, xl) + 1px}) {
    @content;
  }
}

@mixin tf-desktop-xxl {
  @media (min-width: #{tf-map-get($tf-media-breakpoints, xxl) + 1px}) {
    @content;
  }
}

@mixin tf-desktop-and-tablet {
  @media (min-width: #{tf-map-get($tf-media-breakpoints, md) + 1px}) {
    @content;
  }
}

@mixin tf-tablet {
  @media (min-width: #{tf-map-get($tf-media-breakpoints, md) + 1px}) and (max-width: #{tf-map-get($tf-media-breakpoints, lg)}) {
    @content;
  }
}

@mixin tf-tablet-and-mobile {
  @media (max-width: #{tf-map-get($tf-media-breakpoints, lg)}) {
    @content;
  }
}

@mixin tf-mobile {
  @media (max-width: #{tf-map-get($tf-media-breakpoints, md)}) {
    @content;
  }
}

@mixin tf-mobile-sm {
  @media (max-width: #{tf-map-get($tf-media-breakpoints, sm)}) {
    @content;
  }
}

@mixin tf-responsive-below($width) {
  @media (max-width: #{$width}) {
    @content;
  }
}

@mixin tf-responsive-above($width) {
  @media (min-width: #{$width}) {
    @content;
  }
}

@mixin tf-responsive-range($from, $to) {
  @media (min-width: #{$from}) and (max-width: #{$to}) {
    @content;
  }
}

@mixin tf-hide-scrollbar {
  -ms-overflow-style: none;
  // фитча работает только Ff 64+
  //noinspection CssUnknownProperty
  scrollbar-width: none;
  &::-webkit-scrollbar {
    display: none;
  }
}

@mixin tf-text-ellipse {
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

@mixin custom-scrollbar {
  &::-webkit-scrollbar {
    width:  6px;
    height: 60px;
  }

  &::-webkit-scrollbar-thumb {
    border-radius: 5px;
    background: tf-map-get($tf-state-colors, light, base);
  }

  &::-webkit-scrollbar-track {
    background: transparent;
  }

  & {
    scrollbar-face-color: tf-map-get($tf-state-colors, light, base);
    scrollbar-track-color: tf-map-get($tf-state-colors, light, base);
  }
}

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
  $src: null;

  $extmods: (
          eot: "?",
          svg: "#" + tf-str-replace($name, " ", "_")
  );

  $formats: (
          otf: "opentype",
          ttf: "truetype"
  );

  @each $ext in $exts {
    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
    $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
  }

  @font-face {
    font-family: quote($name);
    font-style: $style;
    font-weight: $weight;
    src: $src;
  }
}
